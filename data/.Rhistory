lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
#tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
#sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
dataList = list(
Y = d$FATMAJCRASHES,
N = length(d$CRASHES),
ljno0=ljno0,
lj0=lj0 ,
lu = lu,
log_l = log(d$MILES),
X = X,
K = length(X[1,]),
Nseg=length(unique(d$TASLINKID)),
j = j, k=k,
w=w,
scolw = scolw,
omub=omub,nomub=nomub,
lomub=length(omub),lnomub=length(nomub),
m0=rep(0,ncol(X)),
V0=diag(ncol(X))/100,
jno0=jno0,j0=j0,mub=rep(0,lu)
)
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
#mub[i] <- inprod(w[i,],u)/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
sum(diag(w))
a=matrix(1:4,ncol=4)
a=matrix(1:4,ncol=2)
a
a[-1,-1]
a[1,-1]
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
mub[i] <- inprod(w[i,-i],u[-i])/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
for(j in 1:lu){
mub[i] <- mub[i] + w[i,j]*u[j]
}
#mub[i] <- inprod(w[i,-i],u[-i])/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
mub[i] <- inprod(w[i,1:5],u[-i])/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
mub[i] <- inprod(w[i,1:5],u)/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
mub[i] <- inprod(w[i,],u)/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
mub[i] <- inprod(w[i,],u)/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
dataList = list(
Y = d$FATMAJCRASHES,
N = length(d$CRASHES),
ljno0=ljno0,
lj0=lj0 ,
lu = lu,
log_l = log(d$MILES),
X = X,
K = length(X[1,]),
Nseg=length(unique(d$TASLINKID)),
j = j, k=k,
w=w,
scolw = scolw,
omub=omub,nomub=nomub,
lomub=length(omub),lnomub=length(nomub),
m0=rep(0,ncol(X)),
V0=diag(ncol(X))/100,
jno0=jno0,j0=j0
)
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
mub[i] <- inprod(w[i,],u)/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
for(j in 1:lu){
mub[i] <- mub[i] + w[i,j]*u[j]
}
#mub[i] <- inprod(w[i,],u)/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
dataList = list(
Y = d$FATMAJCRASHES,
N = length(d$CRASHES),
ljno0=ljno0,
lj0=lj0 ,
lu = lu,
log_l = log(d$MILES),
X = X,
K = length(X[1,]),
Nseg=length(unique(d$TASLINKID)),
j = j, k=k,
w=w,
scolw = scolw,
omub=omub,nomub=nomub,
lomub=length(omub),lnomub=length(nomub),
m0=rep(0,ncol(X)),
V0=diag(ncol(X))/100,
jno0=jno0,j0=j0,ind=c(3,4,5)
)
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
for(j in ind){
mub[i] <- mub[i] + w[i,j]*u[j]
}
#mub[i] <- inprod(w[i,],u)/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
ind=matrix(rep(1:lu,lu),ncol=lu,byrow=F)
View(ind)
diag(ind)
dim(ind)
dim(ind[-diag(ind)])
diag(ind) <- NA
ind = t(matrix(which(!is.na(ind)),nrow=lu-1,ncol=lu))
View(ind)
ind=matrix(rep(1:lu,lu),ncol=lu,byrow=F)
diag(ind) <- NA
ind = (matrix(which(!is.na(ind)),nrow=lu-1,ncol=lu))
ind = (matrix((!is.na(ind)),nrow=lu-1,ncol=lu))
ind=matrix(rep(1:lu,lu),ncol=lu,byrow=F)
diag(ind) <- NA
ind = (matrix((!is.na(ind)),nrow=lu-1,ncol=lu))
ind=matrix(rep(1:lu,lu),ncol=lu,byrow=F)
diag(ind) <- NA
201*201
sum(!is.na(ind))
lu
202*202
201*202
sum(!is.na(ind))
201*202
ind = matrix((!is.na(ind)),nrow=lu-1,ncol=lu,byrow=F)
ind = matrix(ind[(!is.na(ind))],nrow=lu-1,ncol=lu,byrow=F)
View(ind)
indv <- as.numeric(ind)
head(indb)
head(indv)
indv
ind=matrix(rep(1:lu,lu),ncol=lu,byrow=F)
as.numeric(ind)
diag(ind) <- NA
indv <- as.numeric(ind)
as.numeric(ind)
ind = matrix(indv[!is.na(indv)],nrow=lu-1,ncol=lu,byrow=F)
View(ind)
dataList = list(
Y = d$FATMAJCRASHES,
N = length(d$CRASHES),
ljno0=ljno0,
lj0=lj0 ,
lu = lu,
log_l = log(d$MILES),
X = X,
K = length(X[1,]),
Nseg=length(unique(d$TASLINKID)),
j = j, k=k,
w=w,
scolw = scolw,
omub=omub,nomub=nomub,
lomub=length(omub),lnomub=length(nomub),
m0=rep(0,ncol(X)),
V0=diag(ncol(X))/100,
jno0=jno0,j0=j0,ind=ind
)
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
# for(j in ind){
#   mub[i] <- mub[i] + w[i,j]*u[j]
# }
mub[i] <- inprod(w[i,ind[,i]],u[ind[i]])/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
# for(j in ind){
#   mub[i] <- mub[i] + w[i,j]*u[j]
# }
mub[i] <- inprod(w[i,ind[,i]],u[ind[,i]])/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
crash <- "model{
for(i in 1:N){
XB[i] <- inprod(X[i,],beta)
Y[i] ~ dpois(lambda[i])
v[i] ~ dnorm(0,tau2v)
#lambda[i] <- exp(XB[i] + log_l[i] )
}
for(i in 1:lu){
u[i] ~ dnorm(mub[i],tau2b[i])
for(j in 1:(lu-1)){
mub[i] <- mub[i] + w[i,ind[j,i]]*u[ind[j,i]]
}
#mub[i] <- inprod(w[i,],u)/sum(w[i,])   #not sure about this division
tau2b[i] <- tau2u/sum(w[i,])         #not sure about this
}
for(i in 1:lj0){
lambda[j0[i]] <- exp(XB[j0[i]]  + log_l[j0[i]] + v[j[j0[i]]])
}
for(i in 1:ljno0){
lambda[jno0[i]] <-  exp(XB[jno0[i]]  + log_l[jno0[i]] + v[j[jno0[i]]] +u[k[i]]) #not sure about this
}
#u ~ dmnorm(mub,cv)
beta ~ dmnorm(m0,V0)
tau2v ~ dgamma(0.5,0.05)
tau2u ~ dgamma(0.5, 0.05)
sigmav <- 1/sqrt(tau2v)
sigmau <- 1/sqrt(tau2u)
}"
mjc <- jags.model(textConnection(crash),dataList,n.chains=1,n.adapt=1000)
j0
fit <- stan(file = '..\\Model12_Fitting_5.stan',
data = dataList,
#pars="Beta",
pars=c("Beta","lambda"),
chains = 1, iter=100)   ##Compiling the model
library(rstan)
fit <- stan(file = '..\\Model12_Fitting_5.stan',
data = dataList,
#pars="Beta",
pars=c("Beta","lambda"),
chains = 1, iter=100)   ##Compiling the model
?stan
library(rstan)
install.packages("StanHeaders")
systemInfo()
Sys.info()
sessionInfo()
library(StanHeaders)
sessionInfo()
library(rstan)
fit <- stan(file = '..\\Model12_Fitting_5.stan',
data = dataList,
#pars="Beta",
pars=c("Beta","lambda"),
chains = 1, iter=100)   ##Compiling the model
